---
source: crates/edgedb_codegen/src/lib.rs
expression: content
---
pub mod example {
	#[cfg(feature = "query")]
	pub async fn query(
		client: &edgedb_tokio::Client,
	) -> core::result::Result<Vec<Output>, edgedb_errors::Error> {
		client.query("select Team {**}", &()).await
	}
	#[derive(Clone, Debug)]
	#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
	#[cfg_attr(feature = "query", derive(edgedb_derive::Queryable))]
	#[cfg_attr(feature = "builder", derive(typed_builder::TypedBuilder))]
	struct Output {
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub slug: String,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub id: uuid::Uuid,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub created_at: edgedb_protocol::model::DateTime,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub updated_at: edgedb_protocol::model::DateTime,
		# [cfg_attr (feature = "builder" , builder (default , setter (into , strip_option = (fallback = description_opt))))]
		pub description: Option<String>,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub name: String,
		#[cfg_attr(feature = "builder", builder(default))]
		pub wallets: Vec<OutputWallets>,
	}
}
