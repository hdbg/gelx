---
source: crates/edgedb_codegen/tests/codegen.rs
expression: "&content"
---
pub mod example {
	use ::edgedb_codegen::exports as e;
	#[doc = r" Execute the desired query."]
	#[cfg(feature = "query")]
	pub async fn query(
		client: &e::edgedb_tokio::Client,
	) -> core::result::Result<Vec<Output>, e::edgedb_errors::Error> {
		client.query("select Team {**}", &()).await
	}
	#[doc = r" Compose the query as part of a larger transaction."]
	#[cfg(feature = "query")]
	pub async fn transaction(
		conn: &mut e::edgedb_tokio::Transaction,
	) -> core::result::Result<Vec<Output>, e::edgedb_errors::Error> {
		conn.query("select Team {**}", &()).await
	}
	pub type Input = ();
	#[derive(Clone, Debug)]
	#[cfg_attr(feature = "serde", derive(e::serde::Serialize, e::serde::Deserialize))]
	#[cfg_attr(feature = "query", derive(e::edgedb_derive::Queryable))]
	#[cfg_attr(feature = "builder", derive(e::typed_builder::TypedBuilder))]
	pub struct OutputWalletsSet {
		# [cfg_attr (feature = "builder" , builder (default , setter (into , strip_option = (fallback = name_opt))))]
		pub name: Option<String>,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub pubkey: String,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub created_at: e::edgedb_protocol::model::Datetime,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub id: e::uuid::Uuid,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub updated_at: e::edgedb_protocol::model::Datetime,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub primary: bool,
		# [cfg_attr (feature = "builder" , builder (default , setter (into , strip_option = (fallback = description_opt))))]
		pub description: Option<String>,
	}
	#[derive(Clone, Debug)]
	#[cfg_attr(feature = "serde", derive(e::serde::Serialize, e::serde::Deserialize))]
	#[cfg_attr(feature = "query", derive(e::edgedb_derive::Queryable))]
	#[cfg_attr(feature = "builder", derive(e::typed_builder::TypedBuilder))]
	pub struct Output {
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub slug: String,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub id: e::uuid::Uuid,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub created_at: e::edgedb_protocol::model::Datetime,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub updated_at: e::edgedb_protocol::model::Datetime,
		# [cfg_attr (feature = "builder" , builder (default , setter (into , strip_option = (fallback = description_opt))))]
		pub description: Option<String>,
		#[cfg_attr(feature = "builder", builder(setter(into)))]
		pub name: String,
		#[cfg_attr(feature = "builder", builder(default))]
		pub wallets: Vec<OutputWalletsSet>,
	}
}
