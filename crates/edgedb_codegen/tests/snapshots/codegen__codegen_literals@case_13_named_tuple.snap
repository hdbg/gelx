---
source: crates/edgedb_codegen/tests/codegen.rs
expression: "&content"
---
pub mod example {
	#[doc = r" Execute the desired query."]
	#[cfg(feature = "query")]
	pub async fn query(
		client: &edgedb_tokio::Client,
	) -> core::result::Result<Output, edgedb_errors::Error> {
		client
			.query_required_single(
				"select (fruit := 'Apple', quantity := 3.14, fresh := true)",
				&(),
			)
			.await
	}
	#[doc = r" Compose the query as part of a larger transaction."]
	#[cfg(feature = "query")]
	pub async fn transaction(
		conn: &mut edgedb_tokio::Transaction,
	) -> core::result::Result<Output, edgedb_errors::Error> {
		conn.query_required_single(
			"select (fruit := 'Apple', quantity := 3.14, fresh := true)",
			&(),
		)
		.await
	}
	pub type Input = ();
	#[derive(Clone, Debug)]
	#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
	#[cfg_attr(feature = "query", derive(edgedb_derive::Queryable))]
	#[cfg_attr(feature = "builder", derive(typed_builder::TypedBuilder))]
	pub struct Output {
		pub fruit: String,
		pub quantity: f64,
		pub fresh: bool,
	}
}
