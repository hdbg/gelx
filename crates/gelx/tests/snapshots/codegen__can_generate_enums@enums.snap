---
source: crates/gelx/tests/codegen.rs
expression: value
---
mod.rs
//! This file is generated by `gelx generate`.
//! It is not intended for manual editing.
//! To update it, run `gelx generate`.
#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused)]
#![allow(unused_qualifications)]
#![allow(clippy::all)]
use ::gelx::exports as __g;
pub use default::*;
#[path = "additional.rs"]
pub mod additional;
#[path = "default.rs"]
pub mod default;


additional.rs
//! This file is generated by `gelx generate`.
//! It is not intended for manual editing.
//! To update it, run `gelx generate`.
#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused)]
#![allow(unused_qualifications)]
#![allow(clippy::all)]
use super::*;
#[derive(
    Debug,
    Clone,
    Copy,
    __g::serde::Serialize,
    __g::serde::Deserialize,
    __g::gel_derive::Queryable,
    __g::strum::AsRefStr,
    __g::strum::Display,
    __g::strum::EnumString,
    __g::strum::EnumIs,
    __g::strum::FromRepr,
    __g::strum::IntoStaticStr
)]
pub enum Awesomeness {
    Very,
    Somewhat,
    NotReally,
}
#[derive(
    Debug,
    Clone,
    Copy,
    __g::serde::Serialize,
    __g::serde::Deserialize,
    __g::gel_derive::Queryable,
    __g::strum::AsRefStr,
    __g::strum::Display,
    __g::strum::EnumString,
    __g::strum::EnumIs,
    __g::strum::FromRepr,
    __g::strum::IntoStaticStr
)]
pub enum Smartness {
    #[serde(rename = "low")]
    #[strum(serialize = "low")]
    Low,
    #[serde(rename = "mid")]
    #[strum(serialize = "mid")]
    Mid,
    #[serde(rename = "genius")]
    #[strum(serialize = "genius")]
    Genius,
}


default.rs
//! This file is generated by `gelx generate`.
//! It is not intended for manual editing.
//! To update it, run `gelx generate`.
#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused)]
#![allow(unused_qualifications)]
#![allow(clippy::all)]
use super::*;
#[derive(
    Debug,
    Clone,
    Copy,
    __g::serde::Serialize,
    __g::serde::Deserialize,
    __g::gel_derive::Queryable,
    __g::strum::AsRefStr,
    __g::strum::Display,
    __g::strum::EnumString,
    __g::strum::EnumIs,
    __g::strum::FromRepr,
    __g::strum::IntoStaticStr
)]
pub enum AccountProvider {
    Github,
}
#[derive(
    Debug,
    Clone,
    Copy,
    __g::serde::Serialize,
    __g::serde::Deserialize,
    __g::gel_derive::Queryable,
    __g::strum::AsRefStr,
    __g::strum::Display,
    __g::strum::EnumString,
    __g::strum::EnumIs,
    __g::strum::FromRepr,
    __g::strum::IntoStaticStr
)]
pub enum RelationshipType {
    Follow,
    Block,
    Mute,
}
#[derive(
    Debug,
    Clone,
    Copy,
    __g::serde::Serialize,
    __g::serde::Deserialize,
    __g::gel_derive::Queryable,
    __g::strum::AsRefStr,
    __g::strum::Display,
    __g::strum::EnumString,
    __g::strum::EnumIs,
    __g::strum::FromRepr,
    __g::strum::IntoStaticStr
)]
pub enum Role {
    None,
    Editor,
    Moderator,
    Admin,
    Owner,
}
